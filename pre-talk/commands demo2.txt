#Proof previous deployment worked:
curl https://\$ID.execute-api.ap-southeast-2.amazonaws.com/Prod/?left=4&right=2


#-----SHOW SAM CLI and ARTEFACT
#show command for installing and version.
npm install sam-local
sam —-version

# Show sam commands.
sam --help
sam local —help

# show artefacts:
ls

#show code and template
nano calculator.go
nano template-go.yaml

# 0. validate SAM template
sam validate --template template-go.yaml

#compile
GOOS=linux go build calculator.go



#-----TEST CODE + API
# 1. Test API
sam local start-api

# 2. Browse:
http://127.0.0.1:3000/?left=4&right=2


#----------MAKE A CHANGE --- HOT-RELOADING
nano calculator.go
Ctrl + O
Ctrl + X

#compile
GOOS=linux go build calculator.go

#-----GENERATE EVENT + INVOKE + LOGS






#----DEPLOY ----

# 8. Package + Deploy new Function

sam package --template-file template-go.yaml --s3-bucket $ARTIFACT_BUCKET --output-template-file packaged.yaml

sam deploy --template-file ./packaged.yaml --stack-name go-calculator --capabilities CAPABILITY_IAM


#BACK TO SLIDES---------------

# 9. Collect Details about Lambda Function
## This is getting the Go Function ARN and saving it as an environment variable
. ./prep

# 10. Update API to use new function


aws apigateway put-integration                                          \
    --rest-api-id $API_ID                                               \
    --resource-id $API_RESOURCE_ID                                      \
    --http-method GET                                                   \
    --type AWS_PROXY                                                    \
    --integration-http-method POST                                      \
    --uri arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/$LAMBDA_ALIAS_ARN/invocations

aws lambda add-permission                                               \
    --statement-id 1                                                    \
    --function-name awesome-go-calculator                               \
    --action "lambda:*"                                                 \
    --principal "apigateway.amazonaws.com"                              \
    --source-arn $METHOD_ARN                                            \
    --qualifier live

aws apigateway create-deployment                                        \
    --rest-api-id $API_ID                                               \
    --stage-name Prod                                                   \
    --canary-settings '{ "percentTraffic”:10, "useStageCache":false }'

# 12. Promote Canary

aws apigateway update-stage                                              \
    --rest-api-id "$API_ID"                                              \
    --stage-name 'Prod'                                                  \
    --patch-operations '[{
        "op": "replace",
        "value": "0.0",
        "path": "/canarySettings/percentTraffic"
      }, {
        "op": "copy",
        "from": "/canarySettings/deploymentId",
        "path": "/deploymentId"
      }]'

#THE END - cleanup
#1 node function to multiplying
#2 go function to adding
#3 delete both packaged.yaml and calculator compiled binary.
#4 delete both stacks
aws cloudformation delete-stack —-stack-name calculator
aws cloudformation delete-stack --stack-name go-calculator
# exit sam local start-api
Ctrl + c
